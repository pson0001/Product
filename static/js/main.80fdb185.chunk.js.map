{"version":3,"sources":["components/Navigation.js","assets/loss.png","assets/model.png","components/TableauEmbed.js","assets/image 1.png","assets/image 2.png","assets/image 3.png","assets/image 4.png","assets/graph1.png","assets/image 5.png","assets/image 6.png","assets/graph2.png","assets/image 7.png","assets/graph3.png","assets/image 8.png","components/jupView/JupView.js","components/Notebook.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","props","useState","ifInsights","setIfInsights","getIfInsights","className","onClick","tableau","window","TableauEmbed","options","device","ref","useRef","refTimeSeries","refClass","refGeo","useEffect","Viz","current","src","LossImg","alt","ModelImg","ReactMarkdown","require","JupViewer","Card","Meta","state","fpath","fbase_path","ed_theme","text_ed_theme","background_theme","background_text_theme","background_input_theme","background_output_theme","loading","notebook_json","placeholder_component","gutterVisible","str","RegExp","test","this","file","fbase","split","pop","setState","join","fetch","then","r","text","a","JSON","parse","console","log","error","alert","message","source","cell_content","code","rgx","new_source","old_source","match","validURL","replace","rgx2","s2","outputs","length","text_plain","stdout","errors","img_data","stdout_found","text_found","error_found","img_found","lines_stdout","lines_text_plain","lines_error_trace","outs","style","padding","display","readOnly","placeholder","mode","theme","name","maxWidth","margin","width","maxLines","fontSize","showPrintMargin","showGutter","highlightActiveLine","value","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","backgroundColor","ev","spinning","class","bodyStyle","border","span","Title","strong","color","wordWrap","title","level","subtitle","coverImg","float","map","item","Text","textAlign","borderStyle","borderWidth","onLoad","onChange","praseSource","parseMD","escapeHtml","praseOutputs","React","Component","Notebook","marginBottom","JupView","App","showInsights","setShowInsights","e","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAgCeA,G,cA9BI,SAACC,GAAW,IAAD,EACQC,mBAAS,YADjB,mBACrBC,EADqB,KACTC,EADS,KAI5B,OADAH,EAAMI,cAAcF,GAElB,sBAAKG,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,gEADF,IAC2C,mDAE3C,qBAAKA,UAAU,WAAf,SACE,+BACE,oBACEC,QAAS,kBAAMH,EAAc,aAC7BE,UAA0B,aAAfH,EAA4B,WAAa,GAFtD,gCAOA,oBACEI,QAAS,kBAAMH,EAAc,aAC7BE,UAA0B,aAAfH,EAA4B,WAAa,GAFtD,gCCpBK,G,OAAA,IAA0B,kCCA1B,MAA0B,kCCIjCK,EAAYC,OAAZD,QA6aOE,EA3aM,WACnB,IAAMC,EAAU,CACdC,OAAQ,WAEJC,EAAMC,iBAAO,MAQbC,EAAgBD,iBAAO,MAQvBE,EAAWF,iBAAO,MAOlBG,EAASH,iBAAO,MAmCtB,OANAI,qBAAU,WA/CR,IAAIV,EAAQW,IAAIN,EAAIO,QAHpB,sHAGkCT,GAQlC,IAAIH,EAAQW,IAAIJ,EAAcK,QAF9B,mHAEsDT,GAQtD,IAAIH,EAAQW,IAAIH,EAASI,QAFzB,+GAE4CT,GAO5C,IAAIH,EAAQW,IAAIF,EAAOG,QAFvB,4GAEwCT,KA6BvC,IAED,sBAAKL,UAAU,oBAAf,UACE,mDACA,qBAAKA,UAAU,mBAAf,SACE,wQAOF,uDACA,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,8BACE,qBAAKe,IAAKC,EAASC,IAAI,aAG3B,qBAAKjB,UAAU,gBAAf,SAEE,+BACE,sFACA,qEACA,sDAEE,4BAAI,uCACJ,4BAAI,0CAEN,2EAIN,0CACA,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKO,IAAKE,IACV,8BACE,+BACE,mDAEE,4BACE,uBAAOT,UAAU,gBAAjB,SACE,gCACE,+BACE,oCACA,sCACA,8CACA,0CACA,4CACA,yDAMV,wDAEE,yCAFF,IAEkB,wCAFlB,IAEiC,+CAC/B,sCAHF,IAGe,6DAMrB,qBAAKA,UAAU,gBAAf,SACE,+BACE,oEACA,6BAEI,yEAGJ,6BAEI,qGAGJ,qGAKN,kDACA,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,qBAAKO,IAAKA,MAEZ,sBAAKP,UAAU,gBAAf,UACE,qEACA,+BACE,4DACA,8FAIN,2DACA,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,qBAAKO,IAAKG,MAEZ,qBAAKV,UAAU,gBAAf,SACE,6BACE,0FAIN,wFACA,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,eAAf,SACE,qBAAKO,IAAKI,QAGd,0CACA,qBAAKX,UAAU,mBAAf,SACE,wBAAOA,UAAU,gBAAjB,UACE,gCACE,+BACE,0CACA,iDAGJ,kCACE,+BACE,sCACA,6FAEF,+BACE,wCACA,wGAKF,+BACE,wCACA,wGAII,IACN,+BACE,yCACA,yGAII,IACN,+BACE,yCACA,yGAII,IACN,+BACE,yCACA,yGAII,IACN,+BACE,yCACA,yGAII,IACN,+BACE,0CACA,0GAII,IACN,+BACE,gDACA,4FACI,IACN,+BACE,iDACA,6FACI,IACN,+BACE,iDACA,6FACI,IACN,+BACE,mDACA,gGAGI,IACN,+BACE,oDACA,iGAIF,+BACE,oDACA,iGAGI,IACN,+BACE,wDACA,iHAII,IACN,+BACE,yDACA,kHAII,IACN,+BACE,6CACA,+HAII,IACN,+BACE,8CACA,gIAII,IACN,+BACE,8CACA,6HAEkC,UAE9B,IACN,+BACE,8CACA,gIAII,IACN,+BACE,+CACA,8HAEkC,UAE9B,IACN,+BACE,oDACA,6GAEgB,UAEZ,IACN,+BACE,qDACA,8GAEgB,UAEZ,IACN,+BACE,qDACA,8GAEgB,UAEZ,IACN,+BACE,qDACA,8GAEgB,UAEZ,IACN,+BACE,gDACA,iHAEkB,UAEd,IACN,+BACE,iDACA,kHAEkB,UAEd,IACN,+BACE,uCACA,6BAEI,mFAGA,IACN,+BACE,4CACA,yEAEF,+BACE,wCACA,gFAEF,+BACE,uCACA,gFACI,IACN,+BACE,4CACA,gFACI,IACN,+BACE,sCACA,gFACI,IACN,+BACE,uCACA,gFACI,IACN,+BACE,sC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","file":"static/js/main.80fdb185.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './navigation.scss'\nconst Navigation = (props) => {\n  const [ifInsights, setIfInsights] = useState('insights')\n\n  props.getIfInsights(ifInsights)\n  return (\n    <div className=\"nav\">\n      <div className=\"navTitle\">\n        <div>Product Forcasting Case Study</div> <div>By Ezra Aydin</div>\n      </div>\n      <div className=\"navItems\">\n        <ul>\n          <li\n            onClick={() => setIfInsights('insights')}\n            className={ifInsights === 'insights' ? 'selected' : ''}\n          >\n            Insights and Model\n          </li>\n\n          <li\n            onClick={() => setIfInsights('notebook')}\n            className={ifInsights === 'notebook' ? 'selected' : ''}\n          >\n            Notebook\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Navigation\n","export default __webpack_public_path__ + \"static/media/loss.772ceedd.png\";","export default __webpack_public_path__ + \"static/media/model.00c43745.png\";","import React, { useRef, useEffect } from 'react'\nimport './tableauEmbed.scss'\nimport LossImg from './../assets/loss.png'\nimport ModelImg from './../assets/model.png'\nconst { tableau } = window\n\nconst TableauEmbed = () => {\n  const options = {\n    device: 'desktop',\n  }\n  const ref = useRef(null)\n  const url =\n    'https://public.tableau.com/views/promovsnopromoitems/Sheet1?:language=en-US&:display_count=n&:origin=viz_share_link'\n\n  const initViz = () => {\n    new tableau.Viz(ref.current, url, options)\n  }\n\n  const refTimeSeries = useRef(null)\n\n  const urlTimeSeries =\n    'https://public.tableau.com/views/promo-timeseries/Sheet1?:language=en-US&:display_count=n&:origin=viz_share_link'\n  const initVizTimeSeries = () => {\n    new tableau.Viz(refTimeSeries.current, urlTimeSeries, options)\n  }\n\n  const refClass = useRef(null)\n\n  const urlClass =\n    'https://public.tableau.com/views/classvspromo/Sheet1?:language=en-US&:display_count=n&:origin=viz_share_link'\n  const initVizClass = () => {\n    new tableau.Viz(refClass.current, urlClass, options)\n  }\n  const refGeo = useRef(null)\n\n  const urlGeo =\n    'https://public.tableau.com/views/geo_coded/Sheet1?:language=en-US&:display_count=n&:origin=viz_share_link'\n  const initVizGeo = () => {\n    new tableau.Viz(refGeo.current, urlGeo, options)\n  }\n\n  // const refFLuYear = useRef(null)\n\n  // const urlFLuYear =\n  //   'https://public.tableau.com/views/influenza_16064333146460/Sheet11?:language=en'\n  // const initVizFLuYear = () => {\n  //   new tableau.Viz(refFLuYear.current, urlFLuYear, options)\n  // }\n  // const refSexYear = useRef(null)\n\n  // const urlSexYear = 'https://public.tableau.com/shared/MN9T3NFZR'\n  // const initVizSexYear = () => {\n  //   new tableau.Viz(refSexYear.current, urlSexYear, options)\n  // }\n\n  // const refIndigenous = useRef(null)\n\n  // const urlIndigenous = 'https://public.tableau.com/shared/XWQP79M8T'\n  // const initVizIndigenous = () => {\n  //   new tableau.Viz(refIndigenous.current, urlIndigenous, options)\n  // }\n\n  useEffect(() => {\n    initViz()\n    initVizTimeSeries()\n    initVizClass()\n    initVizGeo()\n  }, [])\n  return (\n    <div className=\"insightsContainer\">\n      <h1>Problem Statement</h1>\n      <div className=\"sectionContainer\">\n        <p>\n          Forecast product sales as accurately as possible between 2017-08-16 &\n          2017-08-31 given product ID and Store ID. We are looking to leverage\n          datasets from previous sales given product ID and Store ID and some\n          supplementary datasets\n        </p>\n      </div>\n      <h1>Discussion on NWRMSLE</h1>\n      <div className=\"sectionContainer\">\n        <div className=\"vizContainer\">\n          <div>\n            <img src={LossImg} alt=\"Loss\" />\n          </div>\n        </div>\n        <div className=\"descContainer\">\n          {/* <h3>Overall</h3> */}\n          <ul>\n            <li>Suitable when predicting values across a large range</li>\n            <li>Avoids penalizing large differences</li>\n            <li>\n              Without the weights!\n              <p>{'Ypred = 500 / Ytrue = 550 -> 0.095'}</p>\n              <p>{'Ypred = 100 / Ytrue = 150 -> 0.402'}</p>\n            </li>\n            <li>Penalize more for underestimation</li>\n          </ul>\n        </div>\n      </div>\n      <h1>The Data</h1>\n      <div className=\"sectionContainer\">\n        <div className=\"vizContainer\">\n          <div ref={refTimeSeries}></div>\n          <div>\n            <ul>\n              <li>\n                Sales data schema\n                <p>\n                  <table className=\"greyGridTable\">\n                    <thead>\n                      <tr>\n                        <th>id</th>\n                        <th>date</th>\n                        <th>store_number</th>\n                        <th>item_nbr</th>\n                        <th>unit_sales</th>\n                        <th>onpromotion</th>\n                      </tr>\n                    </thead>\n                  </table>\n                </p>\n              </li>\n              <li>\n                Supplementary datasets\n                <p>- stores</p> <p>- items</p> <p>- transactions</p>\n                <p>- oil</p> <p>- holidays_events</p>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"descContainer\">\n          <ul>\n            <li>125M training / 33M testing points</li>\n            <li>\n              {\n                'item_nbr & store_nbr are categorical -> useful to embed these values'\n              }\n            </li>\n            <li>\n              {\n                'onpromotion -> 17% missing in training 0% missing in testing -> starts recording from April 2014'\n              }\n            </li>\n            <li>There are items that are not in training and are in testing</li>\n          </ul>\n        </div>\n      </div>\n\n      <h1>On/Off Promotion</h1>\n      <div className=\"sectionContainer\">\n        <div className=\"vizContainer\">\n          <div ref={ref}></div>\n        </div>\n        <div className=\"descContainer\">\n          <h3>Promotion effect on each item sales</h3>\n          <ul>\n            <li>Log transform median sales</li>\n            <li>Promotion sales tend to be above the reference line</li>\n          </ul>\n        </div>\n      </div>\n      <h1>Promotion Effect on Class</h1>\n      <div className=\"sectionContainer\">\n        <div className=\"vizContainer\">\n          <div ref={refClass}></div>\n        </div>\n        <div className=\"descContainer\">\n          <ul>\n            <li>Slope of lines represent class promo relationship</li>\n          </ul>\n        </div>\n      </div>\n      <h1>Store location and sales volume per family and product</h1>\n      <div className=\"sectionContainer\">\n        <div className=\"vizContainer\">\n          <div ref={refGeo}></div>\n        </div>\n      </div>\n      <h1>Features</h1>\n      <div className=\"sectionContainer\">\n        <table className=\"greyGridTable\">\n          <thead>\n            <tr>\n              <th>Features</th>\n              <th>Definition</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>last</td>\n              <td>sales value of day prior given store_nbr & item_nbr pair</td>\n            </tr>\n            <tr>\n              <td>mean_3</td>\n              <td>\n                mean sales value of the last 3 days given store_nbr & item_nbr\n                pair\n              </td>\n            </tr>\n            <tr>\n              <td>mean_7</td>\n              <td>\n                mean sales value of the last 7 days given store_nbr & item_nbr\n                pair\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_14</td>\n              <td>\n                mean sales value of the last 14 days given store_nbr & item_nbr\n                pair\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_28</td>\n              <td>\n                mean sales value of the last 28 days given store_nbr & item_nbr\n                pair\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_60</td>\n              <td>\n                mean sales value of the last 60 days given store_nbr & item_nbr\n                pair\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_90</td>\n              <td>\n                mean sales value of the last 90 days given store_nbr & item_nbr\n                pair\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_365</td>\n              <td>\n                mean sales value of the last 365 days given store_nbr & item_nbr\n                pair\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_diff_7_28</td>\n              <td>variance of mean 7 - 28 given store_nbr & item_nbr pair</td>\n            </tr>{' '}\n            <tr>\n              <td>mean_diff_14_60</td>\n              <td>variance of mean 14 - 60 given store_nbr & item_nbr pair</td>\n            </tr>{' '}\n            <tr>\n              <td>mean_diff_28_90</td>\n              <td>variance of mean 28 - 90 given store_nbr & item_nbr pair</td>\n            </tr>{' '}\n            <tr>\n              <td>mean_no_sale_in_7</td>\n              <td>\n                no sale mean count - 7 days given store_nbr & item_nbr pair\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_no_sale_in_28</td>\n              <td>\n                no sale mean count - 28 days given store_nbr & item_nbr pair\n              </td>\n            </tr>\n            <tr>\n              <td>mean_no_sale_in_90</td>\n              <td>\n                no sale mean count - 90 days given store_nbr & item_nbr pair\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_no_sale_diff_7_28</td>\n              <td>\n                variance of no sale mean count - 7 - 28 days given store_nbr &\n                item_nbr pair\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_no_sale_diff_28_90</td>\n              <td>\n                variance of no sale mean count - 28 - 90 days given store_nbr &\n                item_nbr pair\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>avg_promo_7</td>\n              <td>\n                avg number of days an item was on promo in the last 7 days given\n                store_nbr & item_nbr pair\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>avg_promo_14</td>\n              <td>\n                avg number of days an item was on promo in the last 14 days\n                given store_nbr & item_nbr pair\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>avg_promo_28</td>\n              <td>\n                avg number of days an item was on promo in the last 28 days\n                given store_nbr & item_nbr pair{' '}\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>avg_promo_90</td>\n              <td>\n                avg number of days an item was on promo in the last 90 days\n                given store_nbr & item_nbr pair\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>avg_promo_365</td>\n              <td>\n                avg number of days an item was on promo in the last 365 days\n                given store_nbr & item_nbr pair{' '}\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_day_of_week_7</td>\n              <td>\n                mean sales for day of the wk in last 7 days given store_nbr &\n                item_nbr pair{' '}\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_day_of_week_14</td>\n              <td>\n                mean sales for day of the wk in last 14 days given store_nbr &\n                item_nbr pair{' '}\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_day_of_week_21</td>\n              <td>\n                mean sales for day of the wk in last 21 days given store_nbr &\n                item_nbr pair{' '}\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_day_of_week_28</td>\n              <td>\n                mean sales for day of the wk in last 28 days given store_nbr &\n                item_nbr pair{' '}\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_day_in_90</td>\n              <td>\n                mean sales for day of the month in last 90 days given store_nbr\n                & item_nbr pair{' '}\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>mean_day_in_365</td>\n              <td>\n                mean sales for day of the month in last 365 days given store_nbr\n                & item_nbr pair{' '}\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>promo</td>\n              <td>\n                {\n                  'looking forward -> promo states of next 16 given store_nbr & item_nbr pair '\n                }\n              </td>\n            </tr>{' '}\n            <tr>\n              <td>promo_mean</td>\n              <td>avg of forward 16days promo figures </td>\n            </tr>\n            <tr>\n              <td>family</td>\n              <td>categorical metadata that is to be embedded</td>\n            </tr>\n            <tr>\n              <td>class</td>\n              <td>categorical metadata that is to be embedded</td>\n            </tr>{' '}\n            <tr>\n              <td>perishable</td>\n              <td>categorical metadata that is to be embedded</td>\n            </tr>{' '}\n            <tr>\n              <td>city</td>\n              <td>categorical metadata that is to be embedded</td>\n            </tr>{' '}\n            <tr>\n              <td>state</td>\n              <td>categorical metadata that is to be embedded</td>\n            </tr>{' '}\n            <tr>\n              <td>type</td>\n              <td>categorical metadata that is to be embedded</td>\n            </tr>{' '}\n            <tr>\n              <td>cluster</td>\n              <td>categorical metadata that is to be embedded</td>\n            </tr>\n            <tr>\n              <td>day_of_week</td>\n              <td>categorical metadata that is to be embedded</td>\n            </tr>\n            <tr>\n              <td>day</td>\n              <td>categorical metadata that is to be embedded</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <h1>Model</h1>\n      <div className=\"sectionContainer\">\n        <div>\n          <img src={ModelImg} alt=\"Model\" />\n        </div>\n      </div>\n      <h1>Evaluations - Training</h1>\n      <div className=\"sectionContainer\">\n        <div className=\"vizContainer\">\n          <ul>\n            <li>bla</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableauEmbed\n","export default __webpack_public_path__ + \"static/media/image 1.9ab2e88f.png\";","export default __webpack_public_path__ + \"static/media/image 2.39be935f.png\";","export default __webpack_public_path__ + \"static/media/image 3.36b85bd9.png\";","export default __webpack_public_path__ + \"static/media/image 4.ceebeaf2.png\";","export default __webpack_public_path__ + \"static/media/graph1.0d6c8736.png\";","export default __webpack_public_path__ + \"static/media/image 5.f9d7743c.png\";","export default __webpack_public_path__ + \"static/media/image 6.0aa1eb2e.png\";","export default __webpack_public_path__ + \"static/media/graph2.8cb12964.png\";","export default __webpack_public_path__ + \"static/media/image 7.93e0e402.png\";","export default __webpack_public_path__ + \"static/media/graph3.494c0738.png\";","export default __webpack_public_path__ + \"static/media/image 8.37cbd7f1.png\";","import React from 'react'\nimport { Card, Spin, Tag, Col, Row, Typography, Switch } from 'antd'\nimport { render } from 'react-dom'\nimport AceEditor from 'react-ace'\nimport 'ace-builds/src-noconflict/mode-python'\nimport 'ace-builds/src-noconflict/theme-monokai'\nimport 'ace-builds/src-noconflict/theme-kuroir'\nimport 'ace-builds/src-noconflict/theme-terminal'\nimport './jupview.scss'\n\nconst ReactMarkdown = require('react-markdown')\nconst { Meta } = Card\n\nclass JupViewer extends React.Component {\n  state = {\n    //file_path\n    fpath: '',\n    fbase_path: '',\n    // Editor Theme\n    ed_theme: 'lightTheme',\n    text_ed_theme: 'kuroir',\n    //themes:\n    //themes:\n    background_theme: 'white',\n    background_text_theme: 'black',\n    // background_input_theme: '#2F3129',\n    background_input_theme: '#F7F7F7',\n    background_output_theme: '#fff',\n    loading: true,\n    notebook_json: null,\n    placeholder_component: 'Loading....',\n\n    // Gutter\n    gutterVisible: false,\n  }\n\n  validURL(str) {\n    var pattern = new RegExp(\n      '^(https?:\\\\/\\\\/)?' + // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n        '(\\\\#[-a-z\\\\d_]*)?$',\n      'i'\n    ) // fragment locator\n    return !!pattern.test(str)\n  }\n\n  async componentDidMount() {\n    if (!!this.props.file) {\n      var fbase = this.props.file.split('/')\n      fbase.pop()\n      this.setState({\n        fpath: this.props.file,\n        fbase_path: fbase.join('/') + '/',\n      })\n      await fetch(this.props.file)\n        .then((r) => r.text())\n        .then(async (text) => {\n          try {\n            var notebook_json = JSON.parse(text)\n            this.setState({\n              notebook_json: notebook_json,\n              loading: false,\n              placeholder_component: 'Notebook loaded',\n            })\n            console.log(this.state.notebook_json)\n          } catch (error) {\n            alert('OOps! Unable to load json')\n            this.setState({\n              notebook_json: { message: 'Unable to parse .ipynb file' },\n              loading: false,\n              placeholder_component:\n                'Oops! We have problem opening the notebook',\n            })\n          }\n        })\n    }\n  }\n\n  praseSource(source) {\n    var cell_content = ``\n    for (var code in source) {\n      cell_content += source[code]\n    }\n    return cell_content\n  }\n\n  parseMD(source) {\n    var cell_content = ``\n    for (var code in source) {\n      var rgx = new RegExp(/src=\"(.*?)\"/)\n      var new_source = source[code]\n      var old_source = source[code].match(rgx)\n      if (!!old_source && !this.validURL(old_source[1])) {\n        new_source = source[code].replace(\n          /src=\"(.*?)\"/,\n          'src=\"' + this.state.fbase_path + old_source[1] + '\"'\n        )\n        // console.log(new_source)\n      } else {\n        var rgx2 = new RegExp(/\\!\\[(.*?)\\]\\((.*?)[\\s|\\)]/)\n        var s2 = source[code].match(rgx2)\n        if (!!s2 && !this.validURL(s2[2])) {\n          // console.log(s2[2])\n          // console.log(this.validURL(s2[2]))\n          // console.log(new_source.replace(s2[2], this.state.fbase_path + s2[2]))\n          new_source = new_source.replace(s2[2], this.state.fbase_path + s2[2])\n        }\n      }\n      //\n      cell_content += new_source\n    }\n    return cell_content\n  }\n\n  praseOutputs(outputs) {\n    if (outputs.length == 0) {\n      return ''\n    }\n    // Handle \"data\" type cells\n    var text_plain = ``\n    var stdout = ``\n    var errors = ``\n    var img_data = `data:image/png;base64,`\n\n    //booleans\n    var stdout_found = false\n    var text_found = false\n    var error_found = false\n    var img_found = false\n\n    //maxlines for each output type\n    var lines_stdout = 3\n    var lines_text_plain = 3\n    var lines_error_trace = 3\n    for (var outs in outputs) {\n      if ('data' in outputs[outs]) {\n        if ('text/plain' in outputs[outs]['data']) {\n          for (var text in outputs[outs]['data']['text/plain']) {\n            text_plain += outputs[outs]['data']['text/plain'][text]\n          }\n          text_found = true\n          lines_text_plain = outputs[outs]['data']['text/plain'].length\n        }\n        if ('image/png' in outputs[outs]['data']) {\n          img_data += outputs[outs]['data']['image/png']\n          img_found = true\n        }\n      }\n      if ('name' in outputs[outs]) {\n        for (var text in outputs[outs]['text']) {\n          stdout += outputs[outs]['text'][text]\n        }\n        stdout_found = true\n        lines_stdout = outputs[outs]['text'].length\n      }\n      // Check for errors\n      if ('ename' in outputs[outs]) {\n        errors += outputs[outs]['ename'] + '\\n' + outputs[outs]['evalue'] + '\\n'\n        // for (var trace in outputs[outs][\"traceback\"]) {\n        //     errors += outputs[outs][\"traceback\"][trace]\n        // }\n        error_found = true\n        lines_error_trace = outputs[outs]['traceback'].length\n      }\n    }\n\n    var return_template = (\n      <div>\n        <div\n          style={{\n            padding: '5px 3px',\n            display: stdout_found ? '' : 'none',\n          }}\n        >\n          {/* <Tag color=\"#2db7f5\">stdout</Tag> */}\n          <br></br>\n          <AceEditor\n            readOnly\n            placeholder=\"--\"\n            mode=\"markdown\"\n            theme={this.state.text_ed_theme}\n            name=\"stdout\"\n            style={{\n              maxWidth: '1300px',\n              padding: '10px',\n              margin: '10px 0px',\n            }}\n            width=\"100%\"\n            maxLines={lines_stdout + 1}\n            fontSize={14}\n            showPrintMargin={false}\n            showGutter={false}\n            highlightActiveLine={false}\n            value={stdout}\n            setOptions={{\n              enableBasicAutocompletion: false,\n              enableLiveAutocompletion: false,\n              enableSnippets: false,\n              showLineNumbers: false,\n              tabSize: 2,\n            }}\n          />\n        </div>\n        <div style={{ padding: '5px 3px', display: text_found ? '' : 'none' }}>\n          {/* <Tag color=\"#87d068\">data:text/plain</Tag> */}\n          <br></br>\n          <AceEditor\n            readOnly\n            placeholder=\"--\"\n            mode=\"markdown\"\n            theme={this.state.text_ed_theme}\n            name=\"text\"\n            style={{\n              maxWidth: '1300px',\n              padding: '10px',\n              margin: '10px 0px',\n            }}\n            width=\"100%\"\n            maxLines={lines_text_plain}\n            fontSize={14}\n            showPrintMargin={false}\n            showGutter={false}\n            highlightActiveLine={false}\n            value={text_plain}\n            setOptions={{\n              enableBasicAutocompletion: false,\n              enableLiveAutocompletion: false,\n              enableSnippets: false,\n              showLineNumbers: false,\n              tabSize: 2,\n            }}\n          />\n        </div>\n        <div style={{ display: img_found ? '' : 'none' }}>\n          {/* <Tag color=\"#87d068\">data:image/png</Tag> */}\n          <br></br>\n          <img\n            src={img_data}\n            style={{\n              display: img_found ? '' : 'none',\n              width: '50%',\n              backgroundColor: 'white',\n            }}\n          />\n        </div>\n        <div style={{ padding: '5px 3px', display: error_found ? '' : 'none' }}>\n          {/* <Tag color=\"#f50\">error</Tag> */}\n          <br></br>\n          <AceEditor\n            readOnly\n            placeholder=\"--\"\n            mode=\"markdown\"\n            theme={this.state.text_ed_theme}\n            name=\"error\"\n            style={{\n              maxWidth: '1300px',\n              padding: '10px',\n              margin: '10px 0px',\n            }}\n            width=\"100%\"\n            maxLines={lines_error_trace}\n            fontSize={14}\n            showPrintMargin={false}\n            showGutter={false}\n            highlightActiveLine={false}\n            value={errors}\n            setOptions={{\n              enableBasicAutocompletion: false,\n              enableLiveAutocompletion: false,\n              enableSnippets: false,\n              showLineNumbers: false,\n              tabSize: 2,\n            }}\n          />\n        </div>\n      </div>\n    )\n\n    return return_template\n  }\n\n  themeChanger(ev) {\n    if (ev) {\n      this.setState({\n        // Editor Theme\n        ed_theme: 'lightTheme',\n        text_ed_theme: 'kuroir',\n        //themes:\n        background_theme: 'white',\n        background_text_theme: 'black',\n        // background_input_theme: '#2F3129',\n        background_input_theme: '#F7F7F7',\n        background_output_theme: '#F7F7F7',\n      })\n    } else {\n      this.setState({\n        // Editor Theme\n        ed_theme: 'lightTheme',\n        text_ed_theme: 'kuroir',\n        //themes:\n        background_theme: 'white',\n        background_text_theme: 'black',\n        // background_input_theme: '#2F3129',\n        background_input_theme: '#F7F7F7',\n        background_output_theme: '#F7F7F7',\n      })\n    }\n    console.log(`switch to ${ev}`)\n  }\n\n  gutterChanger(ev) {\n    if (ev) {\n      this.setState({\n        gutterVisible: true,\n      })\n    } else {\n      this.setState({\n        gutterVisible: false,\n      })\n    }\n  }\n\n  render() {\n    //   console.log(this.props.file)\n    return (\n      <div>\n        <br></br>\n        <Spin spinning={this.state.loading}>\n          <center>\n            {/* This is where the blog metadata and the cover will go */}\n            <div class={this.state.ed_theme}>\n              <Card\n                bodyStyle={{\n                  padding: '30px 10px',\n                  backgroundColor: this.state.background_output_theme,\n                }}\n                style={{\n                  width: '100%',\n                  maxWidth: '1400px',\n                  border: 'none',\n                }}\n              >\n                <Row>\n                  <Col span={1}></Col>\n                  <Col span={22}>\n                    <Typography.Title\n                      strong\n                      style={{\n                        color: this.state.background_text_theme,\n                        // fontSize: '50px',\n                        wordWrap: 'break-word',\n                        width: '100%',\n                      }}\n                    >\n                      {this.props.title}\n                    </Typography.Title>\n                    <Typography.Title\n                      level={4}\n                      style={{\n                        color: this.state.background_text_theme,\n                        wordWrap: 'break-word',\n                        width: '100%',\n                        display: !!this.props.subtitle ? '' : 'none',\n                      }}\n                    >\n                      {this.props.subtitle}\n                    </Typography.Title>\n                  </Col>\n                  <Col span={1}></Col>\n                </Row>\n\n                <Row>\n                  <Col span={1}></Col>\n                  <Col span={22}>\n                    <img\n                      alt=\"No Cover Image Found\"\n                      style={{\n                        display: !!this.props.coverImg ? '' : 'none',\n                        width: '100%',\n                      }}\n                      src={\n                        !!this.props.coverImg\n                          ? this.props.coverImg\n                          : 'http://eskipaper.com/images/simple-silver-wallpaper-1.jpg'\n                      }\n                    />\n                  </Col>\n                  <Col span={1}></Col>\n                </Row>\n\n                <br></br>\n                <br></br>\n                <Row>\n                  <Col span={1}></Col>\n                  <Col span={20}>\n                    <Tag color=\"blue\" style={{ float: 'left' }}>\n                      {this.state.loading\n                        ? 'Unknown'\n                        : this.state.notebook_json['metadata']['kernelspec'][\n                            'display_name'\n                          ]}\n                    </Tag>\n                    {/* <Switch\n                      style={{\n                        margin: '0px 5px',\n                      }}\n                      defaultChecked\n                      checkedChildren=\"light theme\"\n                      unCheckedChildren=\"dark theme\"\n                      onChange={this.themeChanger.bind(this)}\n                    />\n                    <Switch\n                      style={{\n                        margin: '0px 5px',\n                      }}\n                      checkedChildren=\"gutter visilbe\"\n                      unCheckedChildren=\"gutter hidden\"\n                      onChange={this.gutterChanger.bind(this)}\n                    /> */}\n                  </Col>\n                  <Col span={1}></Col>\n                </Row>\n              </Card>\n            </div>\n            {this.state.loading ? (\n              <div></div>\n            ) : (\n              this.state.notebook_json['cells'].map((item) => (\n                <Card\n                  bodyStyle={{\n                    padding: '0px 10px',\n                    backgroundColor: this.state.background_output_theme,\n                  }}\n                  style={{\n                    width: '100%',\n                    maxWidth: '1400px',\n                    border: 'none',\n                  }}\n                >\n                  <Row\n                    style={{\n                      backgroundColor: this.state.background_output_theme,\n                    }}\n                  >\n                    <Col span={this.state.gutterVisible ? 3 : 1}>\n                      <div\n                        style={{\n                          display: this.state.gutterVisible ? '' : 'none',\n                        }}\n                      >\n                        <Typography.Text\n                          style={{\n                            color: this.state.background_text_theme,\n                            float: 'left',\n                            padding: '5px',\n                            color: '#56ACBC',\n                            display: item['cell_type'] == 'code' ? '' : 'none',\n                            backgroundColor: 'transparent',\n                          }}\n                        >\n                          I [ {item['execution_count']} ]:\n                        </Typography.Text>\n                      </div>\n                    </Col>\n\n                    <Col\n                      span={this.state.gutterVisible ? 20 : 22}\n                      style={{\n                        textAlign: 'left',\n                      }}\n                    >\n                      {item['cell_type'] == 'code' ? (\n                        <div\n                          style={{\n                            padding: '5px 0px',\n                            borderStyle: 'solid',\n                            borderWidth: '1px',\n                            backgroundColor: this.state.background_input_theme,\n                          }}\n                        >\n                          <AceEditor\n                            readOnly\n                            placeholder=\"---\"\n                            mode=\"python\"\n                            theme={this.state.text_ed_theme}\n                            name=\"code\"\n                            style={{\n                              maxWidth: '1300px',\n                              padding: '10px',\n                              margin: '10px 0px',\n                              backgroundColor: 'transparent',\n                            }}\n                            width=\"100%\"\n                            maxLines={\n                              item['source'].length == 0\n                                ? 1\n                                : item['source'].length + 1\n                            }\n                            onLoad={this.onLoad}\n                            onChange={this.onChange}\n                            fontSize={14}\n                            showGutter={true}\n                            highlightActiveLine={true}\n                            value={this.praseSource(item['source'])}\n                            setOptions={{\n                              enableBasicAutocompletion: false,\n                              enableLiveAutocompletion: false,\n                              enableSnippets: false,\n                              showLineNumbers: true,\n                              tabSize: 2,\n                            }}\n                          />\n                        </div>\n                      ) : (\n                        <div class=\"MDImg\">\n                          <div\n                            class={this.state.ed_theme}\n                            style={{\n                              margin: '0px 0px',\n                              padding: '10px',\n                              width: '100%',\n                              // border:'solid',\n                              // borderWidth:'1px'\n                            }}\n                          >\n                            <ReactMarkdown\n                              style={{\n                                float: 'left',\n                              }}\n                              source={this.parseMD(item['source'])}\n                              escapeHtml={false}\n                            />\n                          </div>\n                        </div>\n                      )}\n                    </Col>\n                    <Col span={1}></Col>\n                  </Row>\n\n                  {item['cell_type'] == 'markdown' ? (\n                    <div></div>\n                  ) : (\n                    <Row\n                      style={{\n                        display:\n                          !!item['outputs'].length == 0 ? 'none' : 'visible',\n                        backgroundColor: this.state.background_output_theme,\n                      }}\n                    >\n                      <Col span={this.state.gutterVisible ? 3 : 1}>\n                        <Typography.Text\n                          style={{\n                            display: this.state.gutterVisible ? '' : 'none',\n                            color: this.state.background_text_theme,\n                            float: 'left',\n                            padding: '5px',\n                            color: '#E5496A',\n                            backgroundColor: 'transparent',\n                          }}\n                        >\n                          O [ {item['execution_count']} ]:\n                        </Typography.Text>\n                      </Col>\n                      <Col\n                        span={this.state.gutterVisible ? 20 : 22}\n                        style={{\n                          textAlign: 'left',\n                          color: 'white',\n                          backgroundColor: 'transparent',\n                        }}\n                      >\n                        {this.praseOutputs(item['outputs'])}\n                      </Col>\n                      <Col span={1}></Col>\n                    </Row>\n                  )}\n                </Card>\n              ))\n            )}\n          </center>\n        </Spin>\n        <br></br>\n      </div>\n    )\n  }\n}\n\nexport default JupViewer\n","import JupViewer from './jupView/JupView'\n\nconst Notebook = () => {\n  return (\n    <div style={{ marginBottom: '100px' }}>\n      <JupViewer file=\"https://raw.githubusercontent.com/pson0001/Product/main/src/assets/influenza_au.ipynb\"></JupViewer>\n    </div>\n  )\n}\nexport default Notebook\n","import './App.scss'\nimport React, { useState } from 'react'\n\nimport Navigation from './components/Navigation'\nimport TableauEmbed from './components/TableauEmbed'\nimport Modelling from './components/Modelling'\nimport Notebook from './components/Notebook'\n\nfunction App() {\n  const [showInsights, setShowInsights] = useState('insights')\n  const getIfInsights = (e) => {\n    setShowInsights(e)\n  }\n  return (\n    <div>\n      <Navigation getIfInsights={getIfInsights}></Navigation>\n      <div className=\"container\">\n        {showInsights === 'insights' ? <TableauEmbed></TableauEmbed> : null}\n        {showInsights === 'notebook' ? <Notebook></Notebook> : null}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}